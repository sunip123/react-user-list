{"ast":null,"code":"var _jsxFileName = \"/Users/sujitsingh/Desktop/user-list/src/components/Pagination.js\";\nimport React from 'react';\n\nclass Pagination extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      currentPage: null,\n      pageCount: null\n    };\n  }\n\n  componentWillMount() {\n    const startingPage = this.props.startingPage ? this.props.startingPage : 1;\n    const data = this.props.data;\n    const pageSize = this.props.pageSize;\n    let pageCount = parseInt(data.length / pageSize);\n\n    if (data.length % pageSize > 0) {\n      pageCount++;\n    }\n\n    this.setState({\n      currentPage: startingPage,\n      pageCount: pageCount\n    });\n  }\n\n  setCurrentPage(num) {\n    this.setState({\n      currentPage: num\n    });\n  }\n\n  createControls() {\n    let controls = [];\n    const pageCount = this.state.pageCount;\n\n    for (let i = 1; i <= pageCount; i++) {\n      const baseClassName = 'pagination-controls__button';\n      const activeClassName = i === this.state.currentPage ? `${baseClassName}--active` : '';\n      controls.push( /*#__PURE__*/React.createElement(\"div\", {\n        className: `${baseClassName} ${activeClassName}`,\n        onClick: () => this.setCurrentPage(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, i));\n    }\n\n    return controls;\n  }\n\n  createPaginatedData() {\n    const data = this.props.data;\n    const pageSize = this.props.pageSize;\n    const currentPage = this.state.currentPage;\n    const upperLimit = currentPage * pageSize;\n    const dataSlice = data.slice(upperLimit - pageSize, upperLimit);\n    return dataSlice;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pagination-controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, this.createControls()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pagination-results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, React.cloneElement(this.props.children, {\n      data: this.createPaginatedData()\n    })));\n  }\n\n}\n\nPagination.propTypes = {\n  data: React.PropTypes.array.isRequired,\n  pageSize: React.PropTypes.number.isRequired,\n  startingPage: React.PropTypes.number.isRequired\n};\nPagination.defaultProps = {\n  pageSize: 2,\n  startingPage: 1\n};\n/*\nclass Example extends React.Component {\n  render() {\n    const data = this.props.data;\n    return (\n      <div className='example'>\n        {data.map((item) => {\n          return (\n            <div className='example__item'>\n              {item.id} {item.first_name} {item.last_name}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Pagination\n        data={testData()}\n      >\n        <Example />\n      </Pagination>\n    );\n  }\n}\n\n*/\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/sujitsingh/Desktop/user-list/src/components/Pagination.js"],"names":["React","Pagination","Component","constructor","props","context","state","currentPage","pageCount","componentWillMount","startingPage","data","pageSize","parseInt","length","setState","setCurrentPage","num","createControls","controls","i","baseClassName","activeClassName","push","createPaginatedData","upperLimit","dataSlice","slice","render","cloneElement","children","propTypes","PropTypes","array","isRequired","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nclass Pagination extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n      this.state = {\n        currentPage: null,\n        pageCount: null\n      }\n    }\n    \n    componentWillMount() {\n      const startingPage = this.props.startingPage\n        ? this.props.startingPage\n        : 1;\n      const data = this.props.data;\n      const pageSize = this.props.pageSize;\n      let pageCount = parseInt(data.length / pageSize);\n      if (data.length % pageSize > 0) {\n        pageCount++;\n      }\n      this.setState({\n        currentPage: startingPage,\n        pageCount: pageCount\n      });\n    }\n    \n    setCurrentPage(num) {\n      this.setState({currentPage: num});\n    }\n  \n    createControls() {\n      let controls = [];\n      const pageCount = this.state.pageCount;\n      for (let i = 1; i <= pageCount; i++) {\n        const baseClassName = 'pagination-controls__button';\n        const activeClassName = i === this.state.currentPage ? `${baseClassName}--active` : '';\n        controls.push(\n          <div\n            className={`${baseClassName} ${activeClassName}`}\n            onClick={() => this.setCurrentPage(i)}\n          >\n            {i}\n          </div>\n        );\n      }\n      return controls;\n    }\n  \n    createPaginatedData() {\n      const data = this.props.data;\n      const pageSize = this.props.pageSize;\n      const currentPage = this.state.currentPage;\n      const upperLimit = currentPage * pageSize;\n      const dataSlice = data.slice((upperLimit - pageSize), upperLimit);\n      return dataSlice;\n    }\n  \n    render() {\n      return (\n        <div className='pagination'>\n          <div className='pagination-controls'>\n            {this.createControls()}\n          </div>\n          <div className='pagination-results'>\n            {React.cloneElement(this.props.children, {data: this.createPaginatedData()})}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  Pagination.propTypes = {\n    data: React.PropTypes.array.isRequired,\n    pageSize: React.PropTypes.number.isRequired,\n    startingPage: React.PropTypes.number.isRequired\n  };\n  \n  Pagination.defaultProps = {\n    pageSize: 2,\n    startingPage: 1\n  };\n  \n\n  /*\n  class Example extends React.Component {\n    render() {\n      const data = this.props.data;\n      return (\n        <div className='example'>\n          {data.map((item) => {\n            return (\n              <div className='example__item'>\n                {item.id} {item.first_name} {item.last_name}\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  }\n  \n  class App extends React.Component {\n    render() {\n      return (\n        <Pagination\n          data={testData()}\n        >\n          <Example />\n        </Pagination>\n      );\n    }\n  }\n  \n */\n\n export default Pagination;"]},"metadata":{},"sourceType":"module"}